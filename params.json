{"name":"Proyecto final DAW.","tagline":"Proyecto final DAW, Miguel Angel Navarro Vera","body":"### Proyecto Final Daw\r\n\r\nEl proyecto se basa en la realización de una plataforma web que realice la función de democratizar la figura del personal shopper. Para ello se creará una base de datos, que tras ser parametrizados a través de un test inicial, el sistema sugerirá al cliente: prendas, accesorios, ... en definitiva, ofrecerá diferentes looks que más se adecuen a las preferencias de los clientes. Está parte aunque de sentido al proyecto como atractivo, lo consideramos parte auxiliar. Tras este paso (será opcional) la página dispondrá como función principal, una tienda online que aglutina toda la oferta de moda de las principales marcas de moda. También dispondremos de espacios a la venta/alquier para empresas/particulares que deseen tener a la venta sus artículos y a la vez tener visibilidad desde una gran plataforma. Como servicios anexos, la página web dispondrá de un blog de tendencias así como de un espacio en el que tanto las usuarias como bloggers podrán crear sus propias wish list de prendas disponibles en nuestra web tanto para comercializarlas como para crear rankings o top tens de diferentes aspectos.\r\n\r\nLa función de la creación de estas wish list es dotar al mundo blogger que no tiene medios de un espacio acoplable a sus propios blogs que sirva como pasarela hacia nuestra tienda online.\r\n\r\nTecnologías a desarrollar:\r\n\r\n● J2EE ● HTML5 ● CSS3 ● Oracle ● JavaScript ● Apache Tomcat\r\n\r\nObjetivos:\r\n\r\nDesarrollaré la aplicación bajo J2EE, sobre un servidor Linux con Apache Tomcat y Oracle. Debido a que muy pocas compañías de Hosting ofrecen el servicio de Hosting con Apache Tomcat y Oracle.Pretendo montar el Hosting en mi casa, y que este operativo de manera online. Hay un hosting que ofrecen servicio VPS para servidor dedicado de aplicaciones, tendria que instalar yo todos los servicios necesarios. (Está opción habrá que estudiarla). Si durante el proceso de desarrollo veo que se complica Excesivamente el proceso de despliegue y/o desarrollo del J2EE tendre en cuenta el pasar el Proyecto a PHP.\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}